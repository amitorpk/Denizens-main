{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Splash = function Splash(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      viewedOnboarding = _useState2[0],\n      setViewedOnboarding = _useState2[1];\n\n  var route;\n  useEffect(function () {\n    firstTimeViewer();\n  }, []);\n\n  var firstTimeViewer = function firstTimeViewer() {\n    try {\n      AsyncStorage.getItem(\"@viewedOnboarding\").then(function (value) {\n        if (value == null) {\n          AsyncStorage.setItem(\"@viewedOnboarding\", \"true\");\n          setViewedOnboarding(false);\n        } else {\n          setViewedOnboarding(true);\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (viewedOnboarding == null) {\n    return null;\n  } else if (viewedOnboarding == true) {\n    route = \"LoginScreen\";\n  } else {\n    route = \"OnboardingScreen\";\n  }\n\n  setTimeout(function () {\n    navigation.replace(route);\n  }, 2000);\n  return _jsx(_StyledComponent, {\n    className: \"h-full flex justify-center align-middle\",\n    component: View,\n    children: _jsx(_StyledComponent, {\n      className: \"text-center\",\n      component: Text,\n      children: \"splash\"\n    })\n  });\n};\n\nexport default Splash;\n\n_NativeWindStyleSheet.create({\n  styles: {\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"h-full\": {\n      \"height\": \"100%\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    },\n    \"text-center\": {\n      \"textAlign\": \"center\"\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","AsyncStorage","Splash","navigation","viewedOnboarding","setViewedOnboarding","route","firstTimeViewer","getItem","then","value","setItem","err","console","log","setTimeout","replace"],"sources":["F:/BTP/Denizens/components/Splash/Splash.js"],"sourcesContent":["import { View, Text } from \"react-native\";\r\nimport React from \"react\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst Splash = ({ navigation }) => {\r\n  const [viewedOnboarding, setViewedOnboarding] = useState(null);\r\n  let route;\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    firstTimeViewer();\r\n  }, []);\r\n\r\n  // to make onboarding screen appear only one time\r\n  const firstTimeViewer = () => {\r\n    try {\r\n      AsyncStorage.getItem(\"@viewedOnboarding\").then((value) => {\r\n        if (value == null) {\r\n          AsyncStorage.setItem(\"@viewedOnboarding\", \"true\");\r\n          setViewedOnboarding(false);\r\n        } else {\r\n          setViewedOnboarding(true);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // checking status of viewedOnboarding component\r\n  if (viewedOnboarding == null) {\r\n    return null;\r\n  } else if (viewedOnboarding == true) {\r\n    route = \"LoginScreen\";\r\n  } else {\r\n    route = \"OnboardingScreen\";\r\n  }\r\n\r\n  // Timeout for Splash screeen\r\n  setTimeout(() => {\r\n    navigation.replace(route);\r\n  }, 2000);\r\n\r\n  return (\r\n    <View className=\"h-full flex justify-center align-middle\">\r\n      <Text className=\"text-center\">splash</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Splash;\r\n"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAoB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;;EACjC,gBAAgDJ,QAAQ,CAAC,IAAD,CAAxD;EAAA;EAAA,IAAOK,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,IAAIC,KAAJ;EAGAN,SAAS,CAAC,YAAM;IACdO,eAAe;EAChB,CAFQ,EAEN,EAFM,CAAT;;EAKA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC5B,IAAI;MACFN,YAAY,CAACO,OAAb,CAAqB,mBAArB,EAA0CC,IAA1C,CAA+C,UAACC,KAAD,EAAW;QACxD,IAAIA,KAAK,IAAI,IAAb,EAAmB;UACjBT,YAAY,CAACU,OAAb,CAAqB,mBAArB,EAA0C,MAA1C;UACAN,mBAAmB,CAAC,KAAD,CAAnB;QACD,CAHD,MAGO;UACLA,mBAAmB,CAAC,IAAD,CAAnB;QACD;MACF,CAPD;IAQD,CATD,CASE,OAAOO,GAAP,EAAY;MACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD;EACF,CAbD;;EAgBA,IAAIR,gBAAgB,IAAI,IAAxB,EAA8B;IAC5B,OAAO,IAAP;EACD,CAFD,MAEO,IAAIA,gBAAgB,IAAI,IAAxB,EAA8B;IACnCE,KAAK,GAAG,aAAR;EACD,CAFM,MAEA;IACLA,KAAK,GAAG,kBAAR;EACD;;EAGDS,UAAU,CAAC,YAAM;IACfZ,UAAU,CAACa,OAAX,CAAmBV,KAAnB;EACD,CAFS,EAEP,IAFO,CAAV;EAIA;IACQ,SAAS,EAAC,yCADlB;IAAA;IAAA;MAEU,SAAS,EAAC,aAFpB;MAAA;MAAA;IAAA;EAAA;AAKD,CA5CD;;AA8CA,eAAeJ,MAAf"},"metadata":{},"sourceType":"module"}