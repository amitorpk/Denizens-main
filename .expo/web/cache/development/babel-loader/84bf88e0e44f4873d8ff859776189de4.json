{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { Splash, Onboarding, Home } from \"./screens\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Loading = function Loading() {\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"Loading\"\n    })\n  });\n};\n\nexport default function App() {\n  var Stack = createNativeStackNavigator();\n\n  var _useState = useState(true)[(viewedOnboarding, setViewedOnboarding)] = useState(false);\n\n  var _useState2 = _slicedToArray(_useState, 2);\n\n  loading = _useState2[0];\n  setLoading = _useState2[1];\n\n  var checkOnboarding = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var value = yield AsyncStorage.getItem(\"@viewedOnboaerding\");\n\n        if (value != null) {\n          setViewedOnboarding(true);\n        }\n      } catch (err) {\n        console.log(\"Error ocuured at @checkOnboarding\", err);\n      } finally {\n        setLoading(false);\n      }\n    });\n\n    return function checkOnboarding() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    checkOnboarding();\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Splash\",\n        component: Splash\n      }), loading ? _jsx(Loading, {}) : !viewedOnboarding ? _jsx(Stack.Screen, {\n        name: \"Onboarding\",\n        component: Onboarding\n      }) : \"\", _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home\n      })]\n    })\n  });\n}","map":{"version":3,"names":["StatusBar","useState","useEffect","NavigationContainer","createNativeStackNavigator","Splash","Onboarding","Home","AsyncStorage","Loading","App","Stack","viewedOnboarding","setViewedOnboarding","loading","setLoading","checkOnboarding","value","getItem","err","console","log","headerShown"],"sources":["F:/BTP/Denizens/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { Splash, Onboarding, Home } from \"./screens\";\r\nimport { SafeAreaView } from \"react-native-web\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <View>\r\n      <Text>Loading</Text>\r\n    </View>\r\n  );\r\n};\r\nexport default function App() {\r\n  //states\r\n  const Stack = createNativeStackNavigator();\r\n  [loading, setLoading] = useState(true)[\r\n    (viewedOnboarding, setViewedOnboarding)\r\n  ] = useState(false);\r\n\r\n  //check onboarding funtion\r\n  const checkOnboarding = async () => {\r\n    try {\r\n      const value = await AsyncStorage.getItem(\"@viewedOnboaerding\");\r\n      if (value != null) {\r\n        setViewedOnboarding(true);\r\n      }\r\n    } catch (err) {\r\n      console.log(\"Error ocuured at @checkOnboarding\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    checkOnboarding();\r\n  }, []);\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        <Stack.Screen name=\"Splash\" component={Splash} />\r\n        {loading ? (\r\n          <Loading />\r\n        ) : !viewedOnboarding ? (\r\n          <Stack.Screen name=\"Onboarding\" component={Onboarding} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <Stack.Screen name=\"Home\" component={Home} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;EACpB,OACE,KAAC,IAAD;IAAA,UACE,KAAC,IAAD;MAAA;IAAA;EADF,EADF;AAKD,CAND;;AAOA,eAAe,SAASC,GAAT,GAAe;EAE5B,IAAMC,KAAK,GAAGP,0BAA0B,EAAxC;;EAF4B,gBAGJH,QAAQ,CAAC,IAAD,CAAR,EACrBW,gBAAgB,EAAEC,mBADG,KAEpBZ,QAAQ,CAAC,KAAD,CALgB;;EAAA;;EAG3Ba,OAH2B;EAGlBC,UAHkB;;EAQ5B,IAAMC,eAAe;IAAA,6BAAG,aAAY;MAClC,IAAI;QACF,IAAMC,KAAK,SAAST,YAAY,CAACU,OAAb,CAAqB,oBAArB,CAApB;;QACA,IAAID,KAAK,IAAI,IAAb,EAAmB;UACjBJ,mBAAmB,CAAC,IAAD,CAAnB;QACD;MACF,CALD,CAKE,OAAOM,GAAP,EAAY;QACZC,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,GAAjD;MACD,CAPD,SAOU;QACRJ,UAAU,CAAC,KAAD,CAAV;MACD;IACF,CAXoB;;IAAA,gBAAfC,eAAe;MAAA;IAAA;EAAA,GAArB;;EAcAd,SAAS,CAAC,YAAM;IACdc,eAAe;EAChB,CAFQ,EAEN,EAFM,CAAT;EAIA,OACE,KAAC,mBAAD;IAAA,UACE,MAAC,KAAD,CAAO,SAAP;MAAiB,aAAa,EAAE;QAAEM,WAAW,EAAE;MAAf,CAAhC;MAAA,WACE,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,QAAnB;QAA4B,SAAS,EAAEjB;MAAvC,EADF,EAEGS,OAAO,GACN,KAAC,OAAD,KADM,GAEJ,CAACF,gBAAD,GACF,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,YAAnB;QAAgC,SAAS,EAAEN;MAA3C,EADE,GAGF,EAPJ,EAUE,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,MAAnB;QAA0B,SAAS,EAAEC;MAArC,EAVF;IAAA;EADF,EADF;AAgBD"},"metadata":{},"sourceType":"module"}